#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NUM 1
#define SYM 2
#define MED_NAV 3
#define FUN 4
#define POI 5
#define SCR 6
#define SNI 7

&lt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <0>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    #include "combos.dtsi"

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        lth: layer_tap_hold {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            #binding-cells = <2>;
        };
  };


  keymap {
      compatible = "zmk,keymap";
      Base {
          display-name = "Base";
          bindings = <
            &kp Q          &kp W          &kp E            &kp R               &kp T         &kp Y             &kp U          &kp I          &kp O          &kp P
            &hml LSHFT A   &hml LCTRL S   &hml LALT D      &hml LGUI F         &kp G         &kp H             &hmr RGUI J    &hmr RALT K    &hmr RCTRL L   &hmr RSHFT SEMI
            &lt POI Z      &kp       X    &kp       C      &kp       V         &kp B         &kp N             &kp       M    &kp COMMA      &kp DOT        &lt POI APOS
                                          &lth FUN ESC     &mt LSHFT SPACE     &lth NUM TAB  &lth SYM RET      &lth MED_NAV BSPC
          >;
      };

      Numeral {
          display-name = "Numeral";
          bindings = <
            &trans      &trans      &trans     &trans     &trans     &kp FSLH    &kp N7  &kp N8  &kp N9  &kp MINUS
            &kp LSHFT   &kp LCTRL   &kp LALT   &kp LGUI   &trans     &kp STAR    &kp N4  &kp N5  &kp N6  &kp PLUS
            &trans      &trans      &trans     &kp SPACE  &kp COMMA  &kp N0      &kp N1  &kp N2  &kp N3  &kp DOT
                                    &trans     &trans     &trans     &trans      &trans
          >;
      };

      Symbol {
          display-name = "Symbol";
          bindings = <
            &kp EXCL   &kp AT     &kp HASH      &kp DLLR    &kp PRCNT     &kp CARET     &kp AMPS     &kp STAR     &kp LPAR    &kp RPAR
            &kp GRAVE  &kp BSLH   &kp LSHFT     &kp LCTRL   &kp LALT      &kp FSLH      &kp MINUS    &kp PLUS     &kp LBKT    &kp RBKT
            &kp TILDE  &kp PIPE   &trans        &trans      &kp LGUI      &kp QMARK     &kp UNDER    &kp EQUAL    &kp LBRC    &kp RBRC
                                  &trans        &trans      &trans        &trans        &trans
            >;
        };

        MediaNavigation {
          display-name = "Media/Navigation";
          bindings = <
            &kp INS          &kp HOME          &kp UP            &kp END         &kp PG_UP      &trans      &trans      &trans      &trans       &trans
            &kp DEL          &kp LEFT          &kp DOWN          &kp RIGHT       &kp PG_DN      &trans      &kp LGUI    &kp LALT    &kp LCTRL    &kp LSHIFT
            &caps_word       &kp C_PREV        &kp C_PLAY_PAUSE  &kp C_STOP      &kp C_NEXT     &trans      &trans      &trans      &trans       &trans
                             &kp C_VOL_DN      &kp C_MUTE        &kp C_VOL_UP    &trans         &trans
            >;
        };

        Functions {
          display-name = "Functions";
          bindings = <
            &trans      &trans      &trans     &trans     &trans     &kp PSCRN        &kp F7  &kp F8  &kp F9  &kp F12
            &kp LSHFT   &kp LCTRL   &kp LALT   &kp LGUI   &trans     &kp SLCK         &kp F4  &kp F5  &kp F6  &kp F11
            &trans      &trans      &trans     &trans     &trans     &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F10
                                    &trans     &trans     &trans     &trans           &trans
            >;
        };

        Pointer {
            display-name = "Pointer";
            bindings = <
              &trans       &trans       &trans        &trans        &trans               &trans     &trans        &trans        &trans       &trans
              &kp LSHFT    &kp LCTRL    &kp LALT      &kp LGUI      &trans               &trans     &kp RGUI      &kp RALT      &kp RCTRL    &kp RSHFT
              &trans       &mo SCR      &mo SNI       &trans        &trans               &trans     &trans        &tog SNI      &tog SCR     &trans
                                        &mkp LCLK     &mkp MCLK     &mkp RCLK            &mkp RCLK  &mkp LCLK
            >;
        };

        Scroll {
            display-name = "Scroll";
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans
            >;
        };

        Sniper {
            display-name = "Sniper";
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
