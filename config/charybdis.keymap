#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NUM 1
#define SYM 2
#define MED_NAV 3
#define FUN 4
#define POI 5
#define SCR 6
#define SNI 7

&sl {
  release-after-ms = <250>;
};

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <100>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    #include "combos.dtsi"

    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        dot_rpar: dot_rpar_mod {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp RPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comma_lpar: comma_rpar_mod {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp LPAR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        apo_lbrc: apo_lbrc_mod {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp APOS>, <&kp LBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        dqt_rbrc: dqt_rbrc_mod {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DQT>, <&kp RBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hmr_apo_lbrc: hmr_apo_lbrc_mod {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&apo_lbrc>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
        lt_dqt_rbrc: lt_dqt_rbrc_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            bindings = <&mo>, <&dqt_rbrc>;
            tapping-term-ms = <200>;
        };
  };


  keymap {
      compatible = "zmk,keymap";
      Base {
          display-name = "Base";
          bindings = <
            &kp Q         &kp W         &kp E          &kp R               &kp T         &kp Y           &kp U          &kp I          &kp O         &kp P
            &hml LGUI A   &hml LALT S   &hml LCTRL D   &hml LSHFT F        &kp G         &kp H           &hmr RSHFT J   &hmr RCTRL K   &hmr RALT L   &hmr_apo_lbrc RGUI 0
            &lt POI Z     &kp       X   &kp        C   &kp        V        &kp B         &kp N           &kp        M   &comma_lpar    &dot_rpar     &lt_dqt_rbrc POI 0
                                        &lt FUN ESC    &lt MED_NAV SPACE   &lt NUM TAB   &kp RET         &lt SYM BSPC
          >;
      };

      Numeral {
          display-name = "Numeral";
          bindings = <
            &trans     &trans     &trans     &trans     &trans     &kp FSLH   &kp N7  &kp N8  &kp N9  &kp MINUS
            &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans     &kp STAR   &kp N4  &kp N5  &kp N6  &kp PLUS
            &trans     &trans     &trans     &trans     &trans     &kp PRCNT  &kp N1  &kp N2  &kp N3  &kp EQUAL
                                  &trans     &trans     &trans     &kp DOT     &kp N0
          >;
      };

      Symbol {
          display-name = "Symbol";
          bindings = <
            &kp EXCL   &kp AT     &kp HASH   &kp DLLR   &kp CARET     &trans     &trans     &trans     &trans    &trans
            &kp EQUAL  &kp GT     &kp QMARK  &kp COLON  &kp SEMI      &kp BSLH   &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI
            &kp TILDE  &kp LT     &kp UNDER  &kp PIPE   &kp AMPS      &trans     &trans     &trans     &trans    &trans
                                  &kp GRAVE  &kp LBKT   &kp RBKT      &trans     &trans
            >;
        };

        MediaNavigation {
          display-name = "Media/Navigation";
          bindings = <
            &trans     &trans     &trans     &trans     &trans     &kp PG_UP     &kp HOME          &kp UP      &kp END    &kp INS
            &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans     &kp PG_DN     &kp LEFT          &kp DOWN    &kp RIGHT  &kp C_MUTE
            &trans     &trans     &trans     &trans     &trans     &kp DEL       &kp C_PLAY_PAUSE  &kp C_STOP  &kp N3     &kp C_NEXT
                                  &trans     &trans     &trans     &kp C_VOL_UP  &kp C_VOL_DN
            >;
        };

        Functions {
          display-name = "Functions";
          bindings = <
            &trans     &trans     &trans     &trans     &trans     &kp PSCRN        &kp F7  &kp F8  &kp F9  &kp F12
            &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &trans     &kp SLCK         &kp F4  &kp F5  &kp F6  &kp F11
            &trans     &trans     &trans     &trans     &trans     &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F10
                                  &trans     &trans     &trans     &trans           &trans
            >;
        };

        Pointer {
            display-name = "Pointer";
            bindings = <
              &trans       &trans       &trans        &trans        &trans               &trans     &trans        &trans        &trans       &trans
              &kp LGUI     &kp LALT     &kp LCTRL     &kp LSHFT     &trans               &trans     &kp RSHFT     &kp RCTRL     &kp RALT     &kp RGUI
              &trans       &mo SCR      &mo SNI       &trans        &trans               &trans     &trans        &tog SNI      &tog SCR     &trans
                                        &mkp LCLK     &mkp MCLK     &mkp RCLK            &mkp RCLK  &mkp LCLK
            >;
        };

        Scroll {
            display-name = "Scroll";
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans
            >;
        };

        Sniper {
            display-name = "Sniper";
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans
            >;
        };
    };
};
